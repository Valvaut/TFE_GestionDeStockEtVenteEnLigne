@model TFE_GestionDeStockEtVenteEnLigne.Models.Categorie

@{
    ViewData["Title"] = "Edit";
}

<h2>Edition</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Catégorie</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="ID" />
        <div class="form-group">
            <label asp-for="Nom" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Nom" class="form-control" />
                <span asp-validation-for="Nom" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauvegarder" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div>
        <h4>Catégorie parent</h4>
        <div>
            <select asp-for="CategorieParentID" class="selectpicker">
                <option>Aucune</option>
                @if (Model.CategorieParent != null)
                {
                    <option value="@Model.CategorieParent.ID">@Html.DisplayFor(modelItem => modelItem.CategorieParent.Nom)</option>
                }

                @foreach (var cat in ViewData["allCat"] as IEnumerable<Categorie>)
                {
                    <option value="@cat.ID">@cat.Nom</option>
                }
            </select>
            
        </div>
    </div>
</form>
<div>
    <h4>Catégorie(s) enfant(s)</h4>
    @foreach (var cat in Model.CategorieEnfant)
    { 
        <div>
            @Html.DisplayFor(modelItem => cat.Nom)
        </div>
    }
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
